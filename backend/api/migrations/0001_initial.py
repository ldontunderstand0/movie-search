# Generated by Django 5.2.6 on 2025-09-29 13:51

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Страна',
                'verbose_name_plural': 'Страны',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Жанр',
                'verbose_name_plural': 'Жанры',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=200, verbose_name='ФИО')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('sex', models.CharField(blank=True, choices=[('Мужчина', 'Мужчина'), ('Женщина', 'Женщина')], max_length=7, null=True, verbose_name='Пол')),
                ('biography', models.TextField(blank=True, null=True, verbose_name='Биография')),
            ],
            options={
                'verbose_name': 'Личность',
                'verbose_name_plural': 'Личности',
                'ordering': ['-birth_date'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=200, unique=True, verbose_name='Логин')),
                ('email', models.EmailField(max_length=200, unique=True, verbose_name='Почта')),
                ('password', models.CharField(max_length=200, verbose_name='Пароль')),
                ('role', models.CharField(choices=[('Пользователь', 'Пользователь'), ('Администратор', 'Администратор'), ('Модератор', 'Модератор')], default='Пользователь', max_length=200, verbose_name='Роль')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'ordering': ['username'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('Фильм', 'Фильм'), ('Сериал', 'Сериал')], default='Фильм', max_length=200, verbose_name='Тип')),
                ('title', models.CharField(max_length=200, verbose_name='Название')),
                ('release_date', models.DateField(blank=True, null=True, verbose_name='Дата выхода')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('rate', models.FloatField(blank=True, default=0, verbose_name='Оценка')),
                ('poster', models.ImageField(blank=True, help_text='Загрузите постер фильма', null=True, upload_to='images/posters/', verbose_name='Постер')),
                ('countries', models.ManyToManyField(blank=True, null=True, related_name='movies', to='api.country', verbose_name='Страны')),
                ('genres', models.ManyToManyField(related_name='movies', to='api.genre', verbose_name='Жанры')),
            ],
            options={
                'verbose_name': 'Кино',
                'verbose_name_plural': 'Кино',
                'ordering': ['-rate'],
            },
        ),
        migrations.CreateModel(
            name='Profession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('актер', 'актер'), ('режиссер', 'режиссер')], default='актер', max_length=200, verbose_name='Название')),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='professions', to='api.movie', verbose_name='Кино')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='professions', to='api.person', verbose_name='Личность')),
            ],
            options={
                'verbose_name': 'Профессия',
                'verbose_name_plural': 'Профессии',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='person',
            name='movies',
            field=models.ManyToManyField(blank=True, related_name='movies', through='api.Profession', to='api.movie', verbose_name='Фильмы'),
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate', models.FloatField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10')], default=1, verbose_name='Оценка')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата')),
                ('is_watched', models.BooleanField(default=True, verbose_name='Просмотрено')),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ratings', to='api.movie', verbose_name='Кино')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ratings', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Оценка',
                'verbose_name_plural': 'Оценки',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('Положительная', 'Положительная'), ('Отрицательная', 'Отрицательная'), ('Нейтральная', 'Нейтральная')], max_length=200, verbose_name='Тип')),
                ('title', models.CharField(max_length=200, verbose_name='Заголовок')),
                ('text', models.TextField(verbose_name='Текст')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата')),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='reviews', to='api.movie', verbose_name='Кино')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='reviews', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Рецензия',
                'verbose_name_plural': 'Рецензии',
                'ordering': ['-date'],
            },
        ),
    ]
